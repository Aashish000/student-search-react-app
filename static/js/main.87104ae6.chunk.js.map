{"version":3,"sources":["components/card/card.component.jsx","components/student-list/student-list-component.jsx","components/student-search/student-search-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","student","id","name","email","StudentList","students","map","StudentSearch","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredStudents","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAEaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBACAC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEH,mCAAML,EAAMI,QAAQE,QACpB,4BAAIN,EAAMI,QAAQG,QAClB,2BCNKC,G,MAAc,SAAAR,GAAK,OAC5B,sBAAKC,UAAY,YAAjB,UACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAwBA,QAAWA,GAAvBA,EAAQC,OAF5B,SCFSM,G,MAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACzB,uBACIZ,UAAU,SACVa,KAAK,SACNF,YAAaA,EACbG,SAAWF,MCiCHG,E,kDApCb,aAAc,IAAD,8BACX,gBAcJH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbjC,EAAKC,MAAO,CACVb,SAAU,GACVU,YAAc,IALP,E,qDASf,WACC,IAAD,OACEI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAAET,SAAWkB,S,oBAK3C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACAW,YAAa,kBACbC,aAAee,KAAKf,eAEpB,cAAC,EAAD,CAAaJ,SAAYoB,W,GA/BbI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.87104ae6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img \r\n        alt='student'\r\n        src={`https://robohash.org/${props.student.id}?set=set5&size=200x200`}\r\n            />\r\n        <h2> {props.student.name}</h2>\r\n        <p>{props.student.email}</p>\r\n        <h2></h2>\r\n    </div>\r\n\r\n);","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './style-list.styles.css';\r\n\r\nexport const StudentList = props =>(\r\n    <div className = 'card-list'>\r\n        {props.students.map(student => (\r\n            <Card key ={student.id} student = {student}/>\r\n        ))};\r\n    </div>\r\n\r\n);","import React from 'react';\r\nimport './student-search.styles.css';\r\n\r\nexport const StudentSearch = ({ placeholder, handleChange }) => (\r\n    <input \r\n        className='search' \r\n        type='search'\r\n       placeholder={placeholder}\r\n       onChange={ handleChange} />\r\n    \r\n)","import './App.css';\nimport { Component } from 'react';\nimport { StudentList} from './components/student-list/student-list-component';\nimport { StudentSearch} from './components/student-search/student-search-component';\nclass App extends Component{\n  constructor(){\n    super();\n\n      this.state= {\n        students :[ ],\n        searchField : ''\n      };\n\n}\ncomponentDidMount()\n{\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response=> response.json())\n  .then(users =>this.setState({ students : users}));\n}\nhandleChange = (e) => {\n  this.setState({searchField: e.target.value})\n};\nrender() {\n  const { students, searchField } = this.state;\n  const filteredStudents = students.filter(student =>\n    student.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n  return (\n    <div className='App'>\n      <h1>Students Search</h1>\n      <StudentSearch \n      placeholder ='Search Students'\n      handleChange= {this.handleChange}\n      />\n      <StudentList students = {filteredStudents}/>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}